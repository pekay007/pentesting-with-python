import requests
import argparse
import sys
import json


def handlefile(wordlist):
    with open(wordlist, 'r') as fileobj:
        for word in fileobj:
            yield word.rstrip()


def try_request(url, directory, checkstr, cookie={}):
    new_url = url.replace('PATH', directory)
    if len(cookie):
        res = requests.get(new_url, cookies=cookie)
    else:
        res = requests.get(new_url)
    if res.status_code == 200:
        if checkstr in res.text:
            print(f'{new_url}  - 200')


def main():
    parser = argparse.ArgumentParser(
        description='Simple directory travasal tool.')
    parser.add_argument(
        '-u', required=True, help='url of the website (url must contain the word PATH to substitute the payload).')
    parser.add_argument('-w', required=True, help='path to the wordlist')
    parser.add_argument('-k', required=True,
                        help='Check string to verify the local file inclusion')
    parser.add_argument('-c', help='cookies value as a json string')

    args = parser.parse_args(sys.argv[1:])
    cookie = {}
    wordlist = handlefile(args.w)
    if args.c:
        cookie = json.loads(args.c)
    for word in wordlist:
        try_request(args.u, word,args.k, cookie=cookie)


if __name__ == "__main__":
    main()
